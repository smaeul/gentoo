musl does not support changing the decimal point.
--- a/lua-5.3.4-tests/literals.lua
+++ b/lua-5.3.4-tests/literals.lua
@@ -261,33 +261,6 @@ for s in coroutine.wrap(function () gen("", len) end) do
 end
 
 
--- testing decimal point locale
-if os.setlocale("pt_BR") or os.setlocale("ptb") then
-  assert(tonumber("3,4") == 3.4 and tonumber"3.4" == 3.4)
-  assert(tonumber("  -.4  ") == -0.4)
-  assert(tonumber("  +0x.41  ") == 0X0.41)
-  assert(not load("a = (3,4)"))
-  assert(assert(load("return 3.4"))() == 3.4)
-  assert(assert(load("return .4,3"))() == .4)
-  assert(assert(load("return 4."))() == 4.)
-  assert(assert(load("return 4.+.5"))() == 4.5)
-
-  assert(" 0x.1 " + " 0x,1" + "-0X.1\t" == 0x0.1)
-
-  assert(tonumber"inf" == nil and tonumber"NAN" == nil)
-
-  assert(assert(load(string.format("return %q", 4.51)))() == 4.51)
-
-  local a,b = load("return 4.5.")
-  assert(string.find(b, "'4%.5%.'"))
-
-  assert(os.setlocale("C"))
-else
-  (Message or print)(
-   '\n >>> pt_BR locale not available: skipping decimal point tests <<<\n')
-end
-
-
 -- testing %q x line ends
 local s = "a string with \r and \n and \r\n and \n\r"
 local c = string.format("return %q", s)
